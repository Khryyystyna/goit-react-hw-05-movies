{"version":3,"file":"static/js/219.ba98b942.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,sCAAyCC,IADtC,cACjBE,EADiB,yBAGhBA,EAAMC,MAHU,2CAAH,qDAMXC,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEK,EAAnE,gCADE,cACjBC,EADiB,yBAGhBA,EAAOH,MAHS,2CAAH,sDAMXI,EAAY,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,EAAlC,oBADE,cAClBS,EADkB,yBAGjBA,EAAQN,MAHS,2CAAH,sDAMZO,EAAY,mCAAG,WAAMF,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,oBADE,cAClBW,EADkB,yBAGjBA,EAAQR,MAHS,2CAAH,sDAMZS,EAAY,mCAAG,WAAMJ,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,2BADE,cAClBa,EADkB,yBAGjBA,EAAQV,MAHS,2CAAH,qD,4IC3BZW,EAAOC,EAAAA,GAAAA,GAAH,0CAIJC,EAAOD,EAAAA,GAAAA,GAAH,+EAMJE,EAAQF,EAAAA,GAAAA,IAAH,yC,SC6BlB,EAjCa,WACT,OAA6BG,EAAAA,EAAAA,UAAS,IAAtC,eAAMP,EAAN,KAAeQ,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYP,OAVLE,EAAAA,EAAAA,YAAU,YACNZ,EAAAA,EAAAA,IAAaU,GACTG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACRL,EAAWK,EACZ,IACAC,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,GACJ,GAAE,CAACN,KAGF,+BACI,SAACN,EAAD,UACUH,EAAQkB,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACA,UAACjB,EAAD,YACI,SAACkB,EAAA,EAAD,CAAKC,MAAM,MAAX,UACI,SAAClB,EAAD,CAAOmB,IAAG,UAvBhB,mCAuBgB,OAAsBH,GAAgBI,IAAKN,OAEzD,uBAAIA,KACJ,uCAAeC,OALRF,EAQd,OAIjB,C","sources":["API.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa48b7303a91a9c7df7e1a4ff8af3e68';\n\nexport const getTrending = async () => {\n    const trend = await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n\n    return trend.data;\n};\n\nexport const searchMovie = async query => {\n    const search = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`)\n\n    return search.data;\n};\n\nexport const detalisMovie = async id => {\n    const detalis = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n\n    return detalis.data;\n};\n\nexport const creditsMovie = async id => {\n    const credits = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n\n    return credits.data;\n};\n\nexport const reviewsMovie = async id => {\n    const reviews = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n\n    return reviews.data;\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 40px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { creditsMovie } from 'API';\nimport { Box } from '../Box/Box';\nimport { List, Item, Image } from './Cast.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n    const[credits, setCredits] = useState([]);\n    const { movieId } = useParams();\n\nuseEffect(() => {\n    creditsMovie(movieId)\n       .then(({ cast }) => {\n        setCredits(cast);\n      })\n      .catch(error => {\n        return console.log(error);\n      });\n  }, [movieId]);\n\n     return (\n    <>\n        <List>\n                 {credits.map(({ credit_id, name, character, profile_path }) => {\n                     return (\n                     <Item key={credit_id}>\n                         <Box width=\"10%\">\n                             <Image src={`${BASE_IMAGE_URL}${profile_path}`} alt={name}/>\n                         </Box>\n                         <p>{name}</p>\n                         <p>Character: {character}</p>\n                     </Item>\n                     )\n                 })}\n        </List>\n    </>\n  );\n};\n\nexport default Cast;"],"names":["axios","API_KEY","getTrending","trend","data","searchMovie","query","search","detalisMovie","id","detalis","creditsMovie","credits","reviewsMovie","reviews","List","styled","Item","Image","useState","setCredits","movieId","useParams","useEffect","then","cast","catch","error","console","log","map","credit_id","name","character","profile_path","Box","width","src","alt"],"sourceRoot":""}