{"version":3,"file":"static/js/927.f151c8a5.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,sCAAyCC,IADtC,cACjBE,EADiB,yBAGhBA,EAAMC,MAHU,2CAAH,qDAMXC,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEK,EAAnE,gCADE,cACjBC,EADiB,yBAGhBA,EAAOH,MAHS,2CAAH,sDAMXI,EAAY,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,EAAlC,oBADE,cAClBS,EADkB,yBAGjBA,EAAQN,MAHS,2CAAH,sDAMZO,EAAY,mCAAG,WAAMF,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,oBADE,cAClBW,EADkB,yBAGjBA,EAAQR,MAHS,2CAAH,sDAMZS,EAAY,mCAAG,WAAMJ,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA0CR,EAA1C,2BADE,cAClBa,EADkB,yBAGjBA,EAAQV,MAHS,2CAAH,qD,mJCxBZW,EAAQC,EAAAA,GAAAA,IAAH,mOASLC,EAAOD,EAAAA,GAAAA,IAAH,wCAIJE,EAAcF,EAAAA,GAAAA,IAAH,0BAIXG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,iNAWLK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4PAcRO,EAAOP,EAAAA,GAAAA,GAAH,2CAIJQ,EAAOR,EAAAA,GAAAA,GAAH,2C,SCcjB,EA1DqB,WAAO,IAAD,IACzB,GAA8BS,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOf,EAAP,KAAgBgB,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAamB,GACVO,MAAK,SAAAxB,GACJgB,EAAWhB,GACX,IAAMmB,EAAY,GAClBnB,EAAQyB,OAAOC,SAAQ,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAUS,KAAKD,EAA7B,IACvBP,EAAaD,EACd,IACAU,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,GACJ,GAAE,CAACb,IAEN,IAAMgB,EAAc,IAAIC,KAAKlC,EAAQmC,cAC9BC,EAAI,oBAAGf,EAASgB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEpC,OACE,4BACS,SAAC3B,EAAD,CAAU4B,GAAIH,EAAd,mCACP,UAAC7B,EAAD,YACE,SAACF,EAAD,CACEmC,IAAG,UA7BU,mCA6BV,OAAsBxC,EAAQyC,aACjCC,IAAK1C,EAAQ2C,MACbC,MAAM,SAER,UAACpC,EAAD,YACE,0BACGR,EAAQ2C,MADX,KACoBV,EAAYY,cADhC,QAGA,wCAAgB7C,EAAQ8C,WAAxB,QACA,sCACA,uBAAI9C,EAAQ+C,YACZ,oCACA,uBAAI5B,EAAU6B,KAAK,eAGvB,UAACnC,EAAD,YACE,mDACA,SAACC,EAAD,WACE,SAACL,EAAD,CAAO8B,GAAG,OAAV,qBAEF,SAACzB,EAAD,WACE,SAACL,EAAD,CAAO8B,GAAG,UAAV,2BAGH,SAAC,EAAAU,SAAD,CAAUC,UAAU,yDAApB,UACD,SAAC,KAAD,QAIL,C","sources":["API.js","pages/MovieDetalis/MovieDetalis.styled.js","pages/MovieDetalis/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa48b7303a91a9c7df7e1a4ff8af3e68';\n\nexport const getTrending = async () => {\n    const trend = await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n\n    return trend.data;\n};\n\nexport const searchMovie = async query => {\n    const search = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`)\n\n    return search.data;\n};\n\nexport const detalisMovie = async id => {\n    const detalis = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n\n    return detalis.data;\n};\n\nexport const creditsMovie = async id => {\n    const credits = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n\n    return credits.data;\n};\n\nexport const reviewsMovie = async id => {\n    const reviews = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n\n    return reviews.data;\n};","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\n\n\nexport const Image = styled.img`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n width: 200px;\n height: 300px;\n margin: 20px;\n`;\n\nexport const Card = styled.div`\ndisplay: flex;\n`;\n\nexport const Information = styled.div`\n\n`;\n\nexport const Links = styled(Link)`\n  max-width: 100px;\n  text-align: center;\n  text-decoration: none;\n  color: white;\n  font-weight: 700;\n  background-color: #f118f5;\n  padding: 10px 20px;\n  border-radius: 20px;\n`;\n\nexport const NavLinks = styled(NavLink)`\n  max-width: 80px;\n  text-align: center;\n  align-items: center;\n  text-decoration: none;\n  color: white;\n  font-weight: 400;\n  background-color: #f118f5;\n  padding: 5px 8px;\n  border-radius: 20px;\n  margin-left: 20px;\n`;\n\n\nexport const List = styled.ul`\nlist-style: none;\n`;\n\nexport const Item = styled.li`\nmargin-top: 30px;\n`;","import { useParams, Outlet, useLocation, } from 'react-router-dom';\nimport { detalisMovie } from 'API';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Image, Information, Card, Links, List, Item, NavLinks } from './MovieDetalis.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const [detalis, setDetalis] = useState({});\n  const { movieId } = useParams();\n  const [genreList, setGenreList] = useState([]);\n  const location = useLocation();\n    \n  useEffect(() => {\n    detalisMovie(movieId)\n      .then(detalis => {\n        setDetalis(detalis);\n        const genreList = [];\n        detalis.genres.forEach(({ name }) => genreList.push(name));\n        setGenreList(genreList);\n      })\n      .catch(error => {\n        return console.log(error);\n      });\n  }, [movieId]);\n\nconst releaseYear = new Date(detalis.release_date);\n const back = location.state?.from ?? '/';\n\n  return (\n    <div>\n             <NavLinks to={back}>ðŸ¡¸ Go back</NavLinks>\n      <Card>\n        <Image\n          src={`${BASE_IMAGE_URL}${detalis.poster_path}`}\n          alt={detalis.title}\n          width=\"320\"\n        />\n        <Information>\n          <h2>\n            {detalis.title} ({releaseYear.getFullYear()})\n          </h2>\n          <p>User score: {detalis.vote_count} </p>\n          <h3>Overview</h3>\n          <p>{detalis.overview}</p>\n          <h4>Genres</h4>\n          <p>{genreList.join(', ')}</p>\n        </Information>\n      </Card>\n      <List>\n        <p>Additional information</p>\n        <Item>\n          <Links to=\"cast\">Cast</Links>\n        </Item>\n        <Item>\n          <Links to=\"reviews\">Reviews</Links>\n        </Item>\n      </List>\n       <Suspense fallback={<h1>Movie Details to be appeared</h1>}>\n      <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrending","trend","data","searchMovie","query","search","detalisMovie","id","detalis","creditsMovie","credits","reviewsMovie","reviews","Image","styled","Card","Information","Links","Link","NavLinks","NavLink","List","Item","useState","setDetalis","movieId","useParams","genreList","setGenreList","location","useLocation","useEffect","then","genres","forEach","name","push","catch","error","console","log","releaseYear","Date","release_date","back","state","from","to","src","poster_path","alt","title","width","getFullYear","vote_count","overview","join","Suspense","fallback"],"sourceRoot":""}